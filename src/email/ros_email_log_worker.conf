## Fox RouterOS Notification
:global SystemGlobalEndID;
:global PPPoEGlobalEndID;
:global ScriptGlobalEndID;
:global FirewallGlobalEndID;
:global DHCPGlobalEndID;

## Shared variables
:local DeviceName [/system identity get name ];
:local Time [/system clock get time ];
:local Date [/system clock get date ];
## Shared variables End

## Resolve Mail Server
:local MailServer "<smtp.xxx.com>";            # Need to customize
:local MailPort "465";
:local MailTls "yes";
:local SendFrom "<your-email-x@xxx.com>";      # Need to customize
:local SendTo "<your-email-y@yyy.com>";        # Need to customize
:local MailIp;
:set MailIp [:resolve $MailServer ];
:delay 1s;
## Resolve End

## System variables
:local SystemEmailText;
:local GetSystemIDs [/log find where buffer ~ "memory" && topics ~ "system" ];
:local LenSystemIDs [:len $GetSystemIDs ];
:if ($SystemGlobalEndID = nothing) do={:set SystemGlobalEndID ($GetSystemIDs -> ($LenSystemIDs-$LenSystemIDs))};
:local SystemStartID [:find $GetSystemIDs $SystemGlobalEndID ];
:local SystemEndID ($GetSystemIDs -> ($LenSystemIDs-1));
## System variables End

## PPPoE variables
:local PPPoEEmailText;
:local GetPPPoEIDs [/log find where buffer ~ "memory" && topics ~ "pppoe" ];
:local LenPPPoEIDs [:len $GetPPPoEIDs ];
:if ($PPPoEGlobalEndID = nothing) do={:set PPPoEGlobalEndID ($GetPPPoEIDs -> ($LenPPPoEIDs-$LenPPPoEIDs))};
:local PPPoEStartID [:find $GetPPPoEIDs $PPPoEGlobalEndID ];
:local PPPoEEndID ($GetPPPoEIDs -> ($LenPPPoEIDs-1));
## PPPoE variables End

## Script variables
:local ScriptEmailText;
:local GetScriptIDs [/log find where buffer ~ "memory" && topics ~ "script" ];
:local LenScriptIDs [:len $GetScriptIDs ];
:if ($ScriptGlobalEndID = nothing) do={:set ScriptGlobalEndID ($GetScriptIDs -> ($LenScriptIDs-$LenScriptIDs))};
:local ScriptStartID [:find $GetScriptIDs $ScriptGlobalEndID ];
:local ScriptEndID ($GetScriptIDs -> ($LenScriptIDs-1));
## Script variables End

## Firewall variables
:local FirewallEmailText;
:local GetFirewallIDs [/log find where buffer ~ "memory" && topics ~ "firewall" ];
:local LenFirewallIDs [:len $GetFirewallIDs ];
:if ($FirewallGlobalEndID = nothing) do={:set FirewallGlobalEndID ($GetFirewallIDs -> ($LenFirewallIDs-$LenFirewallIDs))};
:local FirewallStartID [:find $GetFirewallIDs $FirewallGlobalEndID ];
:local FirewallEndID ($GetFirewallIDs -> ($LenFirewallIDs-1));
## Firewall variables End

## DHCP variables
:local DHCPEmailText;
:local GetDHCPIDs [/log find where buffer ~ "memory" && topics ~ "dhcp" ];
:local LenDHCPIDs [:len $GetDHCPIDs ];
:if ($DHCPGlobalEndID = nothing) do={:set DHCPGlobalEndID ($GetDHCPIDs -> ($LenDHCPIDs-$LenDHCPIDs))};
:local DHCPStartID [:find $GetDHCPIDs $DHCPGlobalEndID ];
:local DHCPEndID ($GetDHCPIDs -> ($LenDHCPIDs-1));
## DHCP variables End


## System Mail
:if ($SystemEndID != $SystemGlobalEndID and [:tobool $SystemGlobalEndID ] ) do={

    #:log info ("Parseing System Logs");
    :for SystemKeyArray from=($SystemStartID) to=($LenSystemIDs-1) do={
        :local SystemIDMessage ($GetSystemIDs ->$SystemKeyArray );
        :set SystemEmailText "$SystemEmailText \n $[/log get number=$SystemIDMessage time] - $[/log get number=$SystemIDMessage message] \n";
        }

    :local Uptime [/system resource get uptime ];
    :local Project "System Event";

    :local Subject "$DeviceName $Project: [Uptime: $Uptime] [$Date $Time]";
    :local SystemBody "=====>   Device $Project   <===== \n $SystemEmailText";

    /tool e-mail send server=$MailIp port=$MailPort tls=$MailTls from=$SendFrom to=$SendTo subject=$Subject body=$SystemBody;
    :delay 5s;
    # END SEND EMAIL
}
## System Mail End

## PPPoE Mail
:if ($PPPoEEndID != $PPPoEGlobalEndID and [:tobool $PPPoEGlobalEndID ] ) do={

    #:log info ("Parseing PPPoE Logs");
    :for PPPoEKeyArray from=($PPPoEStartID) to=($LenPPPoEIDs-1) do={
        :local PPPoEIDMessage ($GetPPPoEIDs ->$PPPoEKeyArray );
        :set PPPoEEmailText "$PPPoEEmailText \n $[/log get number=$PPPoEIDMessage time] - $[/log get number=$PPPoEIDMessage message] \n";
        }

    :local Uptime [/system resource get uptime ];
    :local Project "PPPoE Event";

    :local Subject "$DeviceName $Project: [Uptime: $Uptime] [$Date $Time]";
    :local PPPoEBody "=====>   Device $Project   <===== \n $PPPoEEmailText";

    /tool e-mail send server=$MailIp port=$MailPort tls=$MailTls from=$SendFrom to=$SendTo subject=$Subject body=$PPPoEBody;
    :delay 10s;
    # END SEND EMAIL
}
## PPPoE Mail End

## Script Mail
:if ($ScriptEndID != $ScriptGlobalEndID and [:tobool $ScriptGlobalEndID ] ) do={

    #:log info ("Parseing Script Logs");
    :for ScriptKeyArray from=($ScriptStartID) to=($LenScriptIDs-1) do={
        :local ScriptIDMessage ($GetScriptIDs ->$ScriptKeyArray );
        :set ScriptEmailText "$ScriptEmailText \n $[/log get number=$ScriptIDMessage time] - $[/log get number=$ScriptIDMessage message] \n";
        }

    :local Uptime [/system resource get uptime ];
    :local Project "Script Event";

    :local Subject "$DeviceName $Project: [Uptime: $Uptime] [$Date $Time]";
    :local ScriptBody "=====>   Device $Project   <===== \n $ScriptEmailText";

    /tool e-mail send server=$MailIp port=$MailPort tls=$MailTls from=$SendFrom to=$SendTo subject=$Subject body=$ScriptBody;
    :delay 5s;
    # END SEND EMAIL
}
## Script Mail End

## Firewall Mail
:if ($FirewallEndID != $FirewallGlobalEndID and [:tobool $FirewallGlobalEndID ] ) do={

    #:log info ("Parseing Firewall Logs");
    :for FirewallKeyArray from=($FirewallStartID) to=($LenFirewallIDs-1) do={
        :local FirewallIDMessage ($GetFirewallIDs ->$FirewallKeyArray );
        :set FirewallEmailText "$FirewallEmailText \n $[/log get number=$FirewallIDMessage time] - $[/log get number=$FirewallIDMessage message] \n";
        }

    :local Uptime [/system resource get uptime ];
    :local Project "Firewall Event";

    :local Subject "$DeviceName $Project: [Uptime: $Uptime] [$Date $Time]";
    :local FirewallBody "=====>   Device $Project   <===== \n $FirewallEmailText";

    /tool e-mail send server=$MailIp port=$MailPort tls=$MailTls from=$SendFrom to=$SendTo subject=$Subject body=$FirewallBody;
    :delay 10s;
    # END SEND EMAIL
}
## Firewall Mail End

## DHCP Mail
:if ($DHCPEndID != $DHCPGlobalEndID and [:tobool $DHCPGlobalEndID ] ) do={

    #:log info ("Parseing DHCP Logs");
    :for DHCPKeyArray from=($DHCPStartID) to=($LenDHCPIDs-1) do={
        :local DHCPIDMessage ($GetDHCPIDs ->$DHCPKeyArray );
        :set DHCPEmailText "$DHCPEmailText \n $[/log get number=$DHCPIDMessage time] - $[/log get number=$DHCPIDMessage message] \n";
        }

    :local Uptime [/system resource get uptime ];
    :local Project "DHCPv4 Event";

    :local Subject "$DeviceName $Project: [Uptime: $Uptime] [$Date $Time]";
    :local DHCPBody "=====>   Device $Project   <===== \n $DHCPEmailText";

    /tool e-mail send server=$MailIp port=$MailPort tls=$MailTls from=$SendFrom to=$SendTo subject=$Subject body=$DHCPBody;
    :delay 5s;
    # END SEND EMAIL
}
## DHCP Mail End

:set SystemGlobalEndID $SystemEndID;
:set PPPoEGlobalEndID $PPPoEEndID;
:set ScriptGlobalEndID $ScriptEndID;
:set FirewallGlobalEndID $FirewallEndID;
:set DHCPGlobalEndID $DHCPEndID;

## Fox RouterOS Notification End

